{"hash":"7f8e4b291676bc3f7eaadf2f5e564f463ef3a96a","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport { createAction, props, createReducer, on, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as i1 from '@ngrx/effects';\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { tap, map } from 'rxjs/operators';\n\nclass StoreService {\r\n    constructor() { }\r\n}\r\nStoreService.ɵfac = function StoreService_Factory(t) { return new (t || StoreService)(); };\r\nStoreService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: StoreService, factory: StoreService.ɵfac, providedIn: 'root' });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass StoreComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nStoreComponent.ɵfac = function StoreComponent_Factory(t) { return new (t || StoreComponent)(); };\r\nStoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StoreComponent, selectors: [[\"lib-store\"]], decls: 2, vars: 0, template: function StoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"p\");\r\n        i0.ɵɵtext(1, \" store works! \");\r\n        i0.ɵɵelementEnd();\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'lib-store', template: `\n    <p>\n      store works!\n    </p>\n  ` }]\r\n    }], function () { return []; }, null); })();\n\nclass StoreLibModule {\r\n}\r\nStoreLibModule.ɵfac = function StoreLibModule_Factory(t) { return new (t || StoreLibModule)(); };\r\nStoreLibModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: StoreLibModule });\r\nStoreLibModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreLibModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [StoreComponent],\r\n                imports: [],\r\n                exports: [StoreComponent]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(StoreLibModule, { declarations: [StoreComponent], exports: [StoreComponent] }); })();\n\nconst taskActions = {\r\n    addTask: createAction('[Todo] Add Task', props()),\r\n    removeTask: createAction('[Todo] Remove Task', props()),\r\n    loadTasks: createAction('[Todo] Load Tasks'),\r\n    loadTasksSuccess: createAction('[Todo] Load Tasks success'),\r\n    loadTasksFailure: createAction('[Todo] Load Tasks failure', props())\r\n};\n\nclass TodoEffects {\r\n    constructor(actions$) {\r\n        this.actions$ = actions$;\r\n        this.loadTodos$ = createEffect(() => {\r\n            console.log('Setting up loadTodos$ effect');\r\n            return this.actions$.pipe(tap(action => console.log('Action in pipe:', action)), ofType(taskActions.loadTasks), tap(() => alert('loadTodos action caught')), map(() => taskActions.loadTasksSuccess()));\r\n        });\r\n        alert('TodoEffects constructor called!!!');\r\n        // נוסיף subscription לדיבאג\r\n        this.actions$.subscribe(action => {\r\n            console.log('Action received in effects:', action);\r\n        });\r\n    }\r\n}\r\nTodoEffects.ɵfac = function TodoEffects_Factory(t) { return new (t || TodoEffects)(i0.ɵɵinject(i1.Actions)); };\r\nTodoEffects.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TodoEffects, factory: TodoEffects.ɵfac, providedIn: 'root' });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TodoEffects, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return [{ type: i1.Actions }]; }, null); })();\n\nconst initialState = {\r\n    tasks: [],\r\n    loading: false,\r\n    error: null\r\n};\n\nconst todoReducer = createReducer(initialState, on(taskActions.loadTasks, state => ({\r\n    ...state,\r\n    loading: true\r\n})), on(taskActions.loadTasksSuccess, (state) => ({\r\n    ...state,\r\n    loading: false,\r\n})), on(taskActions.loadTasksFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n})), \r\n//   on(TodoActions.addTask, (state, { task }) => ({\r\n//     ...state,\r\n//     tasks: [...state.tasks, { \r\n//       id: Number(Math.random().toString(36).substring(2, 9)),\r\n//       text :task.data?\r\n//     }]\r\n//   })),\r\non(taskActions.removeTask, (state, { id }) => ({\r\n    ...state,\r\n    tasks: state.tasks.filter(task => task.id !== id)\r\n})));\n\nconst selectTodoState = createFeatureSelector('todos');\r\nconst selectAllTodos = createSelector(selectTodoState, (state) => state.tasks);\r\nconst selectTodoLoading = createSelector(selectTodoState, (state) => state.loading);\n\n/*\r\n * Public API Surface of store\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { StoreComponent, StoreLibModule, StoreService, TodoEffects, initialState, selectAllTodos, selectTodoLoading, selectTodoState, taskActions, todoReducer };\n//# sourceMappingURL=store.mjs.map\n","map":{"version":3,"file":"store.mjs","sources":["../../../projects/store/src/lib/store.service.ts","../../../projects/store/src/lib/store.component.ts","../../../projects/store/src/lib/store.module.ts","../../../projects/store/src/lib/store/todo-store/todo.actions.ts","../../../projects/store/src/lib/store/todo-store/todo.effects.ts","../../../projects/store/src/lib/store/todo.state.ts","../../../projects/store/src/lib/store/todo-store/todo.reducer.ts","../../../projects/store/src/lib/store/todo-store/todo.selectors.ts","../../../projects/store/src/public-api.ts","../../../projects/store/src/store.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-store',\n  template: `\n    <p>\n      store works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class StoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TodoEffects } from './store/todo-store/todo.effects';\nimport { StoreComponent } from './store.component';\n\n@NgModule({\n  declarations: [StoreComponent],\n  imports: [\n  ],\n  exports: [StoreComponent]\n})\nexport class StoreLibModule { }\n","import { createAction, props } from '@ngrx/store';\r\nimport { Task } from '../todo.state';\r\n\r\n\r\n\r\nexport const taskActions = {\r\n  addTask: createAction('[Todo] Add Task', props<{ task: Task }>()),\r\n  removeTask: createAction('[Todo] Remove Task', props<{ id: number }>()),\r\n  loadTasks: createAction('[Todo] Load Tasks'),\r\n  loadTasksSuccess: createAction('[Todo] Load Tasks success'),\r\n  loadTasksFailure: createAction('[Todo] Load Tasks failure', props<{ error: any }>())\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { taskActions} from './todo.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoEffects {\r\n  constructor(private actions$: Actions) {\r\n    alert('TodoEffects constructor called!!!');\r\n    \r\n    // נוסיף subscription לדיבאג\r\n    this.actions$.subscribe(action => {\r\n      console.log('Action received in effects:', action);\r\n    });\r\n  }\r\n\r\n  loadTodos$ = createEffect(() => {\r\n    console.log('Setting up loadTodos$ effect');\r\n    return this.actions$.pipe(\r\n      tap(action => console.log('Action in pipe:', action)),\r\n      ofType(taskActions.loadTasks),\r\n      tap(() => alert('loadTodos action caught')),\r\n      map(() => taskActions.loadTasksSuccess())\r\n    );\r\n  });\r\n} ","export interface Task {\r\n  id: number;\r\n  text: string;\r\n  completed?: boolean;\r\n}\r\n\r\nexport interface TodoState {\r\n  tasks: Task[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport const initialState: TodoState = {\r\n  tasks: [],\r\n  loading: false,\r\n  error: null\r\n}; ","import { createReducer, on } from '@ngrx/store';\r\nimport { TodoState, initialState } from '../todo.state';\r\nimport { taskActions} from './todo.actions';\r\n\r\nexport const todoReducer = createReducer(\r\n  initialState,\r\n  on(taskActions.loadTasks, state => ({\r\n    ...state,\r\n    loading: true\r\n  })),\r\n  on(taskActions.loadTasksSuccess, (state) => ({\r\n    ...state,\r\n    loading: false,\r\n  })),\r\n  on(taskActions.loadTasksFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n  })),\r\n//   on(TodoActions.addTask, (state, { task }) => ({\r\n//     ...state,\r\n//     tasks: [...state.tasks, { \r\n//       id: Number(Math.random().toString(36).substring(2, 9)),\r\n//       text :task.data?\r\n//     }]\r\n\r\n//   })),\r\n  on(taskActions.removeTask, (state, { id }) => ({\r\n    ...state,\r\n    tasks: state.tasks.filter(task => task.id !== id)\r\n  }))\r\n); \r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { TodoState } from '../todo.state';\r\n\r\nexport const selectTodoState = createFeatureSelector<TodoState>('todos');\r\n\r\nexport const selectAllTodos = createSelector(\r\n  selectTodoState,\r\n  (state: TodoState) => state.tasks\r\n);\r\n\r\nexport const selectTodoLoading = createSelector(\r\n  selectTodoState,\r\n  (state: TodoState) => state.loading\r\n); ","/*\n * Public API Surface of store\n */\n\nexport * from './lib/store.service';\nexport * from './lib/store.component';\nexport * from './lib/store.module';\n\nexport * from './lib/store/todo-store/todo.actions';\nexport * from './lib/store/todo-store/todo.effects';\nexport * from './lib/store/todo-store/todo.reducer';\nexport * from './lib/store/todo-store/todo.selectors';\nexport * from './lib/store/todo.state';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport { createAction, props, createReducer, on, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as i1 from '@ngrx/effects';\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { tap, map } from 'rxjs/operators';\n\nclass StoreService {\r\n    constructor() { }\r\n}\r\nStoreService.ɵfac = function StoreService_Factory(t) { return new (t || StoreService)(); };\r\nStoreService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: StoreService, factory: StoreService.ɵfac, providedIn: 'root' });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreService, [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass StoreComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nStoreComponent.ɵfac = function StoreComponent_Factory(t) { return new (t || StoreComponent)(); };\r\nStoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StoreComponent, selectors: [[\"lib-store\"]], decls: 2, vars: 0, template: function StoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"p\");\r\n            i0.ɵɵtext(1, \" store works! \");\r\n            i0.ɵɵelementEnd();\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'lib-store', template: `\n    <p>\n      store works!\n    </p>\n  ` }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass StoreLibModule {\r\n}\r\nStoreLibModule.ɵfac = function StoreLibModule_Factory(t) { return new (t || StoreLibModule)(); };\r\nStoreLibModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: StoreLibModule });\r\nStoreLibModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreLibModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [StoreComponent],\r\n                    imports: [],\r\n                    exports: [StoreComponent]\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(StoreLibModule, { declarations: [StoreComponent], exports: [StoreComponent] }); })();\n\nconst taskActions = {\r\n    addTask: createAction('[Todo] Add Task', props()),\r\n    removeTask: createAction('[Todo] Remove Task', props()),\r\n    loadTasks: createAction('[Todo] Load Tasks'),\r\n    loadTasksSuccess: createAction('[Todo] Load Tasks success'),\r\n    loadTasksFailure: createAction('[Todo] Load Tasks failure', props())\r\n};\n\nclass TodoEffects {\r\n    constructor(actions$) {\r\n        this.actions$ = actions$;\r\n        this.loadTodos$ = createEffect(() => {\r\n            console.log('Setting up loadTodos$ effect');\r\n            return this.actions$.pipe(tap(action => console.log('Action in pipe:', action)), ofType(taskActions.loadTasks), tap(() => alert('loadTodos action caught')), map(() => taskActions.loadTasksSuccess()));\r\n        });\r\n        alert('TodoEffects constructor called!!!');\r\n        // נוסיף subscription לדיבאג\r\n        this.actions$.subscribe(action => {\r\n            console.log('Action received in effects:', action);\r\n        });\r\n    }\r\n}\r\nTodoEffects.ɵfac = function TodoEffects_Factory(t) { return new (t || TodoEffects)(i0.ɵɵinject(i1.Actions)); };\r\nTodoEffects.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TodoEffects, factory: TodoEffects.ɵfac, providedIn: 'root' });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TodoEffects, [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], function () { return [{ type: i1.Actions }]; }, null);\r\n})();\n\nconst initialState = {\r\n    tasks: [],\r\n    loading: false,\r\n    error: null\r\n};\n\nconst todoReducer = createReducer(initialState, on(taskActions.loadTasks, state => (Object.assign(Object.assign({}, state), { loading: true }))), on(taskActions.loadTasksSuccess, (state) => (Object.assign(Object.assign({}, state), { loading: false }))), on(taskActions.loadTasksFailure, (state, { error }) => (Object.assign(Object.assign({}, state), { loading: false, error }))), \r\n//   on(TodoActions.addTask, (state, { task }) => ({\r\n//     ...state,\r\n//     tasks: [...state.tasks, { \r\n//       id: Number(Math.random().toString(36).substring(2, 9)),\r\n//       text :task.data?\r\n//     }]\r\n//   })),\r\non(taskActions.removeTask, (state, { id }) => (Object.assign(Object.assign({}, state), { tasks: state.tasks.filter(task => task.id !== id) }))));\n\nconst selectTodoState = createFeatureSelector('todos');\r\nconst selectAllTodos = createSelector(selectTodoState, (state) => state.tasks);\r\nconst selectTodoLoading = createSelector(selectTodoState, (state) => state.loading);\n\n/*\r\n * Public API Surface of store\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { StoreComponent, StoreLibModule, StoreService, TodoEffects, initialState, selectAllTodos, selectTodoLoading, selectTodoState, taskActions, todoReducer };\n//# sourceMappingURL=store.mjs.map\n","map":{"version":3,"file":"store.mjs","sources":["../../../projects/store/src/lib/store.service.ts","../../../projects/store/src/lib/store.component.ts","../../../projects/store/src/lib/store.module.ts","../../../projects/store/src/lib/store/todo-store/todo.actions.ts","../../../projects/store/src/lib/store/todo-store/todo.effects.ts","../../../projects/store/src/lib/store/todo.state.ts","../../../projects/store/src/lib/store/todo-store/todo.reducer.ts","../../../projects/store/src/lib/store/todo-store/todo.selectors.ts","../../../projects/store/src/public-api.ts","../../../projects/store/src/store.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-store',\n  template: `\n    <p>\n      store works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class StoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TodoEffects } from './store/todo-store/todo.effects';\nimport { StoreComponent } from './store.component';\n\n@NgModule({\n  declarations: [StoreComponent],\n  imports: [\n  ],\n  exports: [StoreComponent]\n})\nexport class StoreLibModule { }\n","import { createAction, props } from '@ngrx/store';\r\nimport { Task } from '../todo.state';\r\n\r\n\r\n\r\nexport const taskActions = {\r\n  addTask: createAction('[Todo] Add Task', props<{ task: Task }>()),\r\n  removeTask: createAction('[Todo] Remove Task', props<{ id: number }>()),\r\n  loadTasks: createAction('[Todo] Load Tasks'),\r\n  loadTasksSuccess: createAction('[Todo] Load Tasks success'),\r\n  loadTasksFailure: createAction('[Todo] Load Tasks failure', props<{ error: any }>())\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { taskActions} from './todo.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoEffects {\r\n  constructor(private actions$: Actions) {\r\n    alert('TodoEffects constructor called!!!');\r\n    \r\n    // נוסיף subscription לדיבאג\r\n    this.actions$.subscribe(action => {\r\n      console.log('Action received in effects:', action);\r\n    });\r\n  }\r\n\r\n  loadTodos$ = createEffect(() => {\r\n    console.log('Setting up loadTodos$ effect');\r\n    return this.actions$.pipe(\r\n      tap(action => console.log('Action in pipe:', action)),\r\n      ofType(taskActions.loadTasks),\r\n      tap(() => alert('loadTodos action caught')),\r\n      map(() => taskActions.loadTasksSuccess())\r\n    );\r\n  });\r\n} ","export interface Task {\r\n  id: number;\r\n  text: string;\r\n  completed?: boolean;\r\n}\r\n\r\nexport interface TodoState {\r\n  tasks: Task[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport const initialState: TodoState = {\r\n  tasks: [],\r\n  loading: false,\r\n  error: null\r\n}; ","import { createReducer, on } from '@ngrx/store';\r\nimport { TodoState, initialState } from '../todo.state';\r\nimport { taskActions} from './todo.actions';\r\n\r\nexport const todoReducer = createReducer(\r\n  initialState,\r\n  on(taskActions.loadTasks, state => ({\r\n    ...state,\r\n    loading: true\r\n  })),\r\n  on(taskActions.loadTasksSuccess, (state) => ({\r\n    ...state,\r\n    loading: false,\r\n  })),\r\n  on(taskActions.loadTasksFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n  })),\r\n//   on(TodoActions.addTask, (state, { task }) => ({\r\n//     ...state,\r\n//     tasks: [...state.tasks, { \r\n//       id: Number(Math.random().toString(36).substring(2, 9)),\r\n//       text :task.data?\r\n//     }]\r\n\r\n//   })),\r\n  on(taskActions.removeTask, (state, { id }) => ({\r\n    ...state,\r\n    tasks: state.tasks.filter(task => task.id !== id)\r\n  }))\r\n); \r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { TodoState } from '../todo.state';\r\n\r\nexport const selectTodoState = createFeatureSelector<TodoState>('todos');\r\n\r\nexport const selectAllTodos = createSelector(\r\n  selectTodoState,\r\n  (state: TodoState) => state.tasks\r\n);\r\n\r\nexport const selectTodoLoading = createSelector(\r\n  selectTodoState,\r\n  (state: TodoState) => state.loading\r\n); ","/*\n * Public API Surface of store\n */\n\nexport * from './lib/store.service';\nexport * from './lib/store.component';\nexport * from './lib/store.module';\n\nexport * from './lib/store/todo-store/todo.actions';\nexport * from './lib/store/todo-store/todo.effects';\nexport * from './lib/store/todo-store/todo.reducer';\nexport * from './lib/store/todo-store/todo.selectors';\nexport * from './lib/store/todo.state';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}