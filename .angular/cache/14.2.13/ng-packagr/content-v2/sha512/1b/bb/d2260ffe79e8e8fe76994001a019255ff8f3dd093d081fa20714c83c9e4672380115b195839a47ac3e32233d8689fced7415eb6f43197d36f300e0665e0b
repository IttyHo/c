{"hash":"d8df2af708344bc20bf6b16963cdae5892613cf0","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport { createAction, props, createReducer, on, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as i1 from '@ngrx/effects';\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { map } from 'rxjs/operators';\nimport * as i1$1 from '@angular/common/http';\nimport { HttpHeaders, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nclass StoreService {\r\n    constructor() { }\r\n}\r\nStoreService.ɵfac = function StoreService_Factory(t) { return new (t || StoreService)(); };\r\nStoreService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: StoreService, factory: StoreService.ɵfac, providedIn: 'root' });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass StoreComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nStoreComponent.ɵfac = function StoreComponent_Factory(t) { return new (t || StoreComponent)(); };\r\nStoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StoreComponent, selectors: [[\"lib-store\"]], decls: 2, vars: 0, template: function StoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"p\");\r\n        i0.ɵɵtext(1, \" store works! \");\r\n        i0.ɵɵelementEnd();\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'lib-store', template: `\n    <p>\n      store works!\n    </p>\n  ` }]\r\n    }], function () { return []; }, null); })();\n\nclass StoreLibModule {\r\n}\r\nStoreLibModule.ɵfac = function StoreLibModule_Factory(t) { return new (t || StoreLibModule)(); };\r\nStoreLibModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: StoreLibModule });\r\nStoreLibModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreLibModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [StoreComponent],\r\n                imports: [],\r\n                exports: [StoreComponent]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(StoreLibModule, { declarations: [StoreComponent], exports: [StoreComponent] }); })();\n\nconst taskActions = {\r\n    addTask: createAction('[Todo] Add Task', props()),\r\n    removeTask: createAction('[Todo] Remove Task', props()),\r\n    loadTasks: createAction('[Todo] Load Tasks'),\r\n    loadTasksSuccess: createAction('[Todo] Load Tasks success'),\r\n    loadTasksFailure: createAction('[Todo] Load Tasks failure', props()),\r\n    updateTask: createAction('[Todo] Update Task', props())\r\n};\n\nclass TodoEffects {\r\n    constructor(actions$) {\r\n        // alert('TodoEffects constructor called!!!');\r\n        this.actions$ = actions$;\r\n        this.loadTodos$ = createEffect(() => {\r\n            // console.log('Setting up loadTodos$ effect');\r\n            return this.actions$.pipe(\r\n            // tap(action => console.log('Action in pipe:', action)),\r\n            ofType(taskActions.loadTasks), \r\n            // tap(() => alert('loadTodos action caught')),\r\n            map(() => taskActions.loadTasksSuccess()));\r\n        });\r\n        this.addTask$ = createEffect(() => {\r\n            // console.log('Setting up addTask$ effect');\r\n            return this.actions$.pipe(\r\n            // tap(action => console.log('Action in pipe:', action)),\r\n            ofType(taskActions.addTask), \r\n            // tap(() => alert('addTask action caught')),\r\n            map(_ => taskActions.loadTasksSuccess()));\r\n        });\r\n        this.removeTask$ = createEffect(() => {\r\n            // console.log('Setting up addTask$ effect');\r\n            return this.actions$.pipe(\r\n            // tap(action => console.log('Action in pipe:', action)),\r\n            ofType(taskActions.removeTask), \r\n            // tap(() => alert('addTask action caught')),\r\n            map(_ => taskActions.loadTasksSuccess()));\r\n        });\r\n        this.updateTask$ = createEffect(() => {\r\n            return this.actions$.pipe(ofType(taskActions.updateTask), map(_ => taskActions.loadTasksSuccess()));\r\n        });\r\n        // נוסיף subscription לדיבאג\r\n        this.actions$.subscribe(action => {\r\n            console.log('Action received in effects:', action);\r\n        });\r\n    }\r\n}\r\nTodoEffects.ɵfac = function TodoEffects_Factory(t) { return new (t || TodoEffects)(i0.ɵɵinject(i1.Actions)); };\r\nTodoEffects.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TodoEffects, factory: TodoEffects.ɵfac, providedIn: 'root' });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TodoEffects, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return [{ type: i1.Actions }]; }, null); })();\n\nconst initialState = {\r\n    tasks: [] = [],\r\n};\n\nconst todoReducer = createReducer(initialState, on(taskActions.loadTasks, state => ({\r\n    ...state,\r\n    loading: true\r\n})), on(taskActions.loadTasksSuccess, (state) => ({\r\n    ...state,\r\n    loading: false,\r\n})), on(taskActions.loadTasksFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n})), on(taskActions.addTask, (state, { task }) => ({\r\n    ...state,\r\n    tasks: [...state.tasks, task] // דחיפת הנתון החדש למערך\r\n})), on(taskActions.removeTask, (state, { id }) => ({\r\n    ...state,\r\n    tasks: state.tasks.filter(task => task.id !== id)\r\n})), on(taskActions.updateTask, (state, { id, newText }) => {\r\n    const taskExists = state.tasks.some(task => task.id === id);\r\n    if (!taskExists) {\r\n        alert(\"not exists\");\r\n        return state; // No changes if the task doesn't exist\r\n    }\r\n    return {\r\n        ...state,\r\n        tasks: state.tasks.map(task => task.id === id\r\n            ? { ...task, text: newText } // Update the task\r\n            : task // Keep other tasks unchanged\r\n        )\r\n    };\r\n}));\n\nconst taskFeatureSelector = createFeatureSelector('todos');\r\nconst selectAllTodos$ = createSelector(taskFeatureSelector, ({ tasks }) => tasks);\r\n// export const selectTodoLoading = createSelector(\r\n//   selectTodoState,\r\n//   (state: TodoState) => state\r\n// );\n\nclass AddressService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.apiUrl = 'https://du-mock-checkout-7d42d0a76fbf.herokuapp.com';\r\n    }\r\n    //https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/#addresses\r\n    getDataWithToken(token) {\r\n        const headers = new HttpHeaders({\r\n            'Authorization': `Bearer ${token}`\r\n        });\r\n        return this.http.get(this.apiUrl + '/api/Address', { headers });\r\n    }\r\n}\r\nAddressService.ɵfac = function AddressService_Factory(t) { return new (t || AddressService)(i0.ɵɵinject(i1$1.HttpClient)); };\r\nAddressService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AddressService, factory: AddressService.ɵfac, providedIn: 'root' });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddressService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return [{ type: i1$1.HttpClient }]; }, null); })();\n\nclass PaymentService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.apiUrl = 'https://du-mock-checkout-7d42d0a76fbf.herokuapp.com';\r\n    }\r\n    //https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/#addresses\r\n    getPaimentOptions(token) {\r\n        const headers = new HttpHeaders({\r\n            'Authorization': `Bearer ${token}`\r\n        });\r\n        // https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/api/Payment/options\r\n        return this.http.get(this.apiUrl + '/api/Payment/Options', { headers });\r\n    }\r\n    getPaimentCreditCardOptions(token) {\r\n        const headers = new HttpHeaders({\r\n            'Authorization': `Bearer ${token}`\r\n        });\r\n        // https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/api/Payment/options\r\n        return this.http.get(this.apiUrl + '/api/Payment/creditcards', { headers });\r\n    }\r\n}\r\nPaymentService.ɵfac = function PaymentService_Factory(t) { return new (t || PaymentService)(i0.ɵɵinject(i1$1.HttpClient)); };\r\nPaymentService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PaymentService, factory: PaymentService.ɵfac, providedIn: 'root' });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return [{ type: i1$1.HttpClient }]; }, null); })();\n\nclass ServicesModule {\r\n}\r\nServicesModule.ɵfac = function ServicesModule_Factory(t) { return new (t || ServicesModule)(); };\r\nServicesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ServicesModule });\r\nServicesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [AddressService, PaymentService], imports: [CommonModule,\r\n        HttpClientModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ServicesModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [],\r\n                imports: [\r\n                    CommonModule,\r\n                    HttpClientModule\r\n                ],\r\n                providers: [AddressService, PaymentService]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ServicesModule, { imports: [CommonModule,\r\n        HttpClientModule] }); })();\n\n/*\r\n * Public API Surface of store\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AddressService, PaymentService, ServicesModule, StoreComponent, StoreLibModule, StoreService, TodoEffects, initialState, selectAllTodos$, taskActions, taskFeatureSelector, todoReducer };\n//# sourceMappingURL=store.mjs.map\n","map":{"version":3,"file":"store.mjs","sources":["../../../projects/store/src/lib/store.service.ts","../../../projects/store/src/lib/store.component.ts","../../../projects/store/src/lib/store.module.ts","../../../projects/store/src/lib/store/todo/todo.actions.ts","../../../projects/store/src/lib/store/todo/todo.effects.ts","../../../projects/store/src/lib/store/todo/todo.state.ts","../../../projects/store/src/lib/store/todo/todo.reducer.ts","../../../projects/store/src/lib/store/todo/todo.selectors.ts","../../../projects/store/src/lib/services/address.service.ts","../../../projects/store/src/lib/services/payment.service.ts","../../../projects/store/src/lib/services/services.module.ts","../../../projects/store/src/public-api.ts","../../../projects/store/src/store.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-store',\n  template: `\n    <p>\n      store works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class StoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TodoEffects } from './store/todo/todo.effects';\nimport { StoreComponent } from './store.component';\n\n@NgModule({\n  declarations: [StoreComponent],\n  imports: [\n  ],\n  exports: [StoreComponent]\n})\nexport class StoreLibModule { }\n","import { createAction, props } from '@ngrx/store';\r\nimport { Task } from './todo.state';\r\n\r\n\r\n\r\nexport const taskActions = {\r\n  addTask: createAction('[Todo] Add Task', props<{ task: Task }>()),\r\n  removeTask: createAction('[Todo] Remove Task', props<{ id: number }>()),\r\n  loadTasks: createAction('[Todo] Load Tasks'),\r\n  loadTasksSuccess: createAction('[Todo] Load Tasks success'),\r\n  loadTasksFailure: createAction('[Todo] Load Tasks failure', props<{ error: any }>()),\r\n  updateTask:createAction( '[Todo] Update Task',props<{ id: number, newText : string }>())\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { exhaustMap, map, tap } from 'rxjs/operators';\r\nimport { taskActions} from './todo.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoEffects {\r\n  constructor(private actions$: Actions) {\r\n    // alert('TodoEffects constructor called!!!');\r\n    \r\n    // נוסיף subscription לדיבאג\r\n    this.actions$.subscribe(action => {\r\n      console.log('Action received in effects:', action);\r\n    });\r\n  }\r\n\r\n  loadTodos$ = createEffect(() => {\r\n    // console.log('Setting up loadTodos$ effect');\r\n    return this.actions$.pipe(\r\n      // tap(action => console.log('Action in pipe:', action)),\r\n      ofType(taskActions.loadTasks),\r\n      // tap(() => alert('loadTodos action caught')),\r\n      map(() => taskActions.loadTasksSuccess())\r\n    );\r\n  });\r\n\r\n  addTask$ = createEffect(() => {\r\n    // console.log('Setting up addTask$ effect');\r\n    return this.actions$.pipe(\r\n      // tap(action => console.log('Action in pipe:', action)),\r\n      ofType(taskActions.addTask),\r\n      // tap(() => alert('addTask action caught')),\r\n        map(_ => taskActions.loadTasksSuccess())\r\n      )})  \r\n     \r\nremoveTask$ = createEffect(() => {\r\n  // console.log('Setting up addTask$ effect');\r\n  return this.actions$.pipe(\r\n    // tap(action => console.log('Action in pipe:', action)),\r\n    ofType(taskActions.removeTask),\r\n    // tap(() => alert('addTask action caught')),\r\n      map(_ => taskActions.loadTasksSuccess())\r\n    )})  \r\nupdateTask$ = createEffect(() => {\r\n  return this.actions$.pipe(\r\n    ofType(taskActions.updateTask),\r\n      map(_ => taskActions.loadTasksSuccess())\r\n    )})  \r\n} ","export interface Task {\r\n  id: number;\r\n  text: string;\r\n  completed?: boolean;\r\n}\r\n\r\nexport interface TodoState {\r\n  tasks: Task[];\r\n\r\n}\r\n\r\nexport const initialState: TodoState = {\r\n  tasks:[]=[],\r\n\r\n}; ","import { createReducer, on } from '@ngrx/store';\r\nimport { TodoState } from './todo.state';\r\nimport { taskActions} from './todo.actions';\r\nimport { initialState } from './todo.state';\r\n\r\nexport const todoReducer = createReducer(\r\ninitialState, \r\n  on(taskActions.loadTasks, state => ({\r\n    ...state,\r\n    loading: true\r\n  })),\r\n  on(taskActions.loadTasksSuccess, (state) => ({\r\n    ...state,\r\n    loading: false,\r\n  })),\r\n  on(taskActions.loadTasksFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n  })),\r\n  on(taskActions.addTask, (state, { task }) => ({\r\n    ...state,\r\n    tasks: [...state.tasks, task] // דחיפת הנתון החדש למערך\r\n\r\n   })),\r\n  on(taskActions.removeTask, (state, { id }) => ({\r\n    ...state,\r\n    tasks: state.tasks.filter(task => task.id !== id)\r\n  })),\r\n  on(taskActions.updateTask, (state, { id,newText }) => {\r\n    const taskExists = state.tasks.some(task => task.id === id);\r\n    if (!taskExists) {\r\n      alert(\"not exists\")\r\n      return state; // No changes if the task doesn't exist\r\n    }\r\n    return {\r\n      ...state,\r\n      tasks: state.tasks.map(task =>\r\n        task.id === id\r\n          ? { ...task, text: newText } // Update the task\r\n          : task // Keep other tasks unchanged\r\n      )\r\n    };\r\n  })\r\n);\r\n","import { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\r\nimport { TodoState } from './todo.state';\r\nimport { Task } from './todo.state';\r\n\r\nexport const taskFeatureSelector: MemoizedSelector<object, TodoState>  = createFeatureSelector<TodoState>('todos');\r\n\r\nexport const selectAllTodos$ : MemoizedSelector<object, Task[]> =\r\ncreateSelector(\r\n   taskFeatureSelector,\r\n     ({tasks}) => tasks );\r\n\r\n\r\n\r\n\r\n// export const selectTodoLoading = createSelector(\r\n//   selectTodoState,\r\n//   (state: TodoState) => state\r\n// ); ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; \nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressService {\n\n  constructor(private http:HttpClient) { }\n  \n  apiUrl='https://du-mock-checkout-7d42d0a76fbf.herokuapp.com';\n  //https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/#addresses\n  getDataWithToken(token: string): Observable<any> {\n\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    return this.http.get<any>(this.apiUrl+'/api/Address', { headers });\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n \n  constructor(private http:HttpClient) { }\n  \n  apiUrl='https://du-mock-checkout-7d42d0a76fbf.herokuapp.com';\n  //https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/#addresses\n  getPaimentOptions(token: string): Observable<any> {\n\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    // https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/api/Payment/options\n\n    return this.http.get<any>(this.apiUrl+'/api/Payment/Options', { headers });\n  }        \n  \n  \n  \n  getPaimentCreditCardOptions(token: string): Observable<any> {\n\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    // https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/api/Payment/options\n\n    return this.http.get<any>(this.apiUrl+'/api/Payment/creditcards', { headers });\n  }   \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddressService } from './address.service';\nimport { PaymentService } from './payment.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers:[AddressService , PaymentService]\n})\nexport class ServicesModule { }\n","/*\n * Public API Surface of store\n */\n\nexport * from './lib/store.service';\nexport * from './lib/store.component';\nexport * from './lib/store.module';\n\nexport * from './lib/store/todo/todo.actions';\nexport * from './lib/store/todo/todo.effects';\nexport * from './lib/store/todo/todo.reducer';\nexport * from './lib/store/todo/todo.selectors';\nexport * from './lib/store/todo/todo.state';\nexport * from './lib/services/address.service';\nexport * from './lib/services/services.module';\nexport * from './lib/services/payment.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport { createAction, props, createReducer, on, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as i1 from '@ngrx/effects';\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { map } from 'rxjs/operators';\nimport * as i1$1 from '@angular/common/http';\nimport { HttpHeaders, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nclass StoreService {\r\n    constructor() { }\r\n}\r\nStoreService.ɵfac = function StoreService_Factory(t) { return new (t || StoreService)(); };\r\nStoreService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: StoreService, factory: StoreService.ɵfac, providedIn: 'root' });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreService, [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass StoreComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nStoreComponent.ɵfac = function StoreComponent_Factory(t) { return new (t || StoreComponent)(); };\r\nStoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StoreComponent, selectors: [[\"lib-store\"]], decls: 2, vars: 0, template: function StoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"p\");\r\n            i0.ɵɵtext(1, \" store works! \");\r\n            i0.ɵɵelementEnd();\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'lib-store', template: `\n    <p>\n      store works!\n    </p>\n  ` }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass StoreLibModule {\r\n}\r\nStoreLibModule.ɵfac = function StoreLibModule_Factory(t) { return new (t || StoreLibModule)(); };\r\nStoreLibModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: StoreLibModule });\r\nStoreLibModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({});\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreLibModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [StoreComponent],\r\n                    imports: [],\r\n                    exports: [StoreComponent]\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(StoreLibModule, { declarations: [StoreComponent], exports: [StoreComponent] }); })();\n\nconst taskActions = {\r\n    addTask: createAction('[Todo] Add Task', props()),\r\n    removeTask: createAction('[Todo] Remove Task', props()),\r\n    loadTasks: createAction('[Todo] Load Tasks'),\r\n    loadTasksSuccess: createAction('[Todo] Load Tasks success'),\r\n    loadTasksFailure: createAction('[Todo] Load Tasks failure', props()),\r\n    updateTask: createAction('[Todo] Update Task', props())\r\n};\n\nclass TodoEffects {\r\n    constructor(actions$) {\r\n        // alert('TodoEffects constructor called!!!');\r\n        this.actions$ = actions$;\r\n        this.loadTodos$ = createEffect(() => {\r\n            // console.log('Setting up loadTodos$ effect');\r\n            return this.actions$.pipe(\r\n            // tap(action => console.log('Action in pipe:', action)),\r\n            ofType(taskActions.loadTasks), \r\n            // tap(() => alert('loadTodos action caught')),\r\n            map(() => taskActions.loadTasksSuccess()));\r\n        });\r\n        this.addTask$ = createEffect(() => {\r\n            // console.log('Setting up addTask$ effect');\r\n            return this.actions$.pipe(\r\n            // tap(action => console.log('Action in pipe:', action)),\r\n            ofType(taskActions.addTask), \r\n            // tap(() => alert('addTask action caught')),\r\n            map(_ => taskActions.loadTasksSuccess()));\r\n        });\r\n        this.removeTask$ = createEffect(() => {\r\n            // console.log('Setting up addTask$ effect');\r\n            return this.actions$.pipe(\r\n            // tap(action => console.log('Action in pipe:', action)),\r\n            ofType(taskActions.removeTask), \r\n            // tap(() => alert('addTask action caught')),\r\n            map(_ => taskActions.loadTasksSuccess()));\r\n        });\r\n        this.updateTask$ = createEffect(() => {\r\n            return this.actions$.pipe(ofType(taskActions.updateTask), map(_ => taskActions.loadTasksSuccess()));\r\n        });\r\n        // נוסיף subscription לדיבאג\r\n        this.actions$.subscribe(action => {\r\n            console.log('Action received in effects:', action);\r\n        });\r\n    }\r\n}\r\nTodoEffects.ɵfac = function TodoEffects_Factory(t) { return new (t || TodoEffects)(i0.ɵɵinject(i1.Actions)); };\r\nTodoEffects.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TodoEffects, factory: TodoEffects.ɵfac, providedIn: 'root' });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TodoEffects, [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], function () { return [{ type: i1.Actions }]; }, null);\r\n})();\n\nconst initialState = {\r\n    tasks: [] = [],\r\n};\n\nconst todoReducer = createReducer(initialState, on(taskActions.loadTasks, state => (Object.assign(Object.assign({}, state), { loading: true }))), on(taskActions.loadTasksSuccess, (state) => (Object.assign(Object.assign({}, state), { loading: false }))), on(taskActions.loadTasksFailure, (state, { error }) => (Object.assign(Object.assign({}, state), { loading: false, error }))), on(taskActions.addTask, (state, { task }) => (Object.assign(Object.assign({}, state), { tasks: [...state.tasks, task] // דחיפת הנתון החדש למערך\r\n }))), on(taskActions.removeTask, (state, { id }) => (Object.assign(Object.assign({}, state), { tasks: state.tasks.filter(task => task.id !== id) }))), on(taskActions.updateTask, (state, { id, newText }) => {\r\n    const taskExists = state.tasks.some(task => task.id === id);\r\n    if (!taskExists) {\r\n        alert(\"not exists\");\r\n        return state; // No changes if the task doesn't exist\r\n    }\r\n    return Object.assign(Object.assign({}, state), { tasks: state.tasks.map(task => task.id === id\r\n            ? Object.assign(Object.assign({}, task), { text: newText }) : task // Keep other tasks unchanged\r\n        ) });\r\n}));\n\nconst taskFeatureSelector = createFeatureSelector('todos');\r\nconst selectAllTodos$ = createSelector(taskFeatureSelector, ({ tasks }) => tasks);\r\n// export const selectTodoLoading = createSelector(\r\n//   selectTodoState,\r\n//   (state: TodoState) => state\r\n// );\n\nclass AddressService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.apiUrl = 'https://du-mock-checkout-7d42d0a76fbf.herokuapp.com';\r\n    }\r\n    //https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/#addresses\r\n    getDataWithToken(token) {\r\n        const headers = new HttpHeaders({\r\n            'Authorization': `Bearer ${token}`\r\n        });\r\n        return this.http.get(this.apiUrl + '/api/Address', { headers });\r\n    }\r\n}\r\nAddressService.ɵfac = function AddressService_Factory(t) { return new (t || AddressService)(i0.ɵɵinject(i1$1.HttpClient)); };\r\nAddressService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AddressService, factory: AddressService.ɵfac, providedIn: 'root' });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddressService, [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], function () { return [{ type: i1$1.HttpClient }]; }, null);\r\n})();\n\nclass PaymentService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.apiUrl = 'https://du-mock-checkout-7d42d0a76fbf.herokuapp.com';\r\n    }\r\n    //https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/#addresses\r\n    getPaimentOptions(token) {\r\n        const headers = new HttpHeaders({\r\n            'Authorization': `Bearer ${token}`\r\n        });\r\n        // https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/api/Payment/options\r\n        return this.http.get(this.apiUrl + '/api/Payment/Options', { headers });\r\n    }\r\n    getPaimentCreditCardOptions(token) {\r\n        const headers = new HttpHeaders({\r\n            'Authorization': `Bearer ${token}`\r\n        });\r\n        // https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/api/Payment/options\r\n        return this.http.get(this.apiUrl + '/api/Payment/creditcards', { headers });\r\n    }\r\n}\r\nPaymentService.ɵfac = function PaymentService_Factory(t) { return new (t || PaymentService)(i0.ɵɵinject(i1$1.HttpClient)); };\r\nPaymentService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PaymentService, factory: PaymentService.ɵfac, providedIn: 'root' });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentService, [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], function () { return [{ type: i1$1.HttpClient }]; }, null);\r\n})();\n\nclass ServicesModule {\r\n}\r\nServicesModule.ɵfac = function ServicesModule_Factory(t) { return new (t || ServicesModule)(); };\r\nServicesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ServicesModule });\r\nServicesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [AddressService, PaymentService], imports: [CommonModule,\r\n        HttpClientModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ServicesModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule,\r\n                        HttpClientModule\r\n                    ],\r\n                    providers: [AddressService, PaymentService]\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ServicesModule, { imports: [CommonModule,\r\n            HttpClientModule] });\r\n})();\n\n/*\r\n * Public API Surface of store\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AddressService, PaymentService, ServicesModule, StoreComponent, StoreLibModule, StoreService, TodoEffects, initialState, selectAllTodos$, taskActions, taskFeatureSelector, todoReducer };\n//# sourceMappingURL=store.mjs.map\n","map":{"version":3,"file":"store.mjs","sources":["../../../projects/store/src/lib/store.service.ts","../../../projects/store/src/lib/store.component.ts","../../../projects/store/src/lib/store.module.ts","../../../projects/store/src/lib/store/todo/todo.actions.ts","../../../projects/store/src/lib/store/todo/todo.effects.ts","../../../projects/store/src/lib/store/todo/todo.state.ts","../../../projects/store/src/lib/store/todo/todo.reducer.ts","../../../projects/store/src/lib/store/todo/todo.selectors.ts","../../../projects/store/src/lib/services/address.service.ts","../../../projects/store/src/lib/services/payment.service.ts","../../../projects/store/src/lib/services/services.module.ts","../../../projects/store/src/public-api.ts","../../../projects/store/src/store.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-store',\n  template: `\n    <p>\n      store works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class StoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TodoEffects } from './store/todo/todo.effects';\nimport { StoreComponent } from './store.component';\n\n@NgModule({\n  declarations: [StoreComponent],\n  imports: [\n  ],\n  exports: [StoreComponent]\n})\nexport class StoreLibModule { }\n","import { createAction, props } from '@ngrx/store';\r\nimport { Task } from './todo.state';\r\n\r\n\r\n\r\nexport const taskActions = {\r\n  addTask: createAction('[Todo] Add Task', props<{ task: Task }>()),\r\n  removeTask: createAction('[Todo] Remove Task', props<{ id: number }>()),\r\n  loadTasks: createAction('[Todo] Load Tasks'),\r\n  loadTasksSuccess: createAction('[Todo] Load Tasks success'),\r\n  loadTasksFailure: createAction('[Todo] Load Tasks failure', props<{ error: any }>()),\r\n  updateTask:createAction( '[Todo] Update Task',props<{ id: number, newText : string }>())\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { exhaustMap, map, tap } from 'rxjs/operators';\r\nimport { taskActions} from './todo.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoEffects {\r\n  constructor(private actions$: Actions) {\r\n    // alert('TodoEffects constructor called!!!');\r\n    \r\n    // נוסיף subscription לדיבאג\r\n    this.actions$.subscribe(action => {\r\n      console.log('Action received in effects:', action);\r\n    });\r\n  }\r\n\r\n  loadTodos$ = createEffect(() => {\r\n    // console.log('Setting up loadTodos$ effect');\r\n    return this.actions$.pipe(\r\n      // tap(action => console.log('Action in pipe:', action)),\r\n      ofType(taskActions.loadTasks),\r\n      // tap(() => alert('loadTodos action caught')),\r\n      map(() => taskActions.loadTasksSuccess())\r\n    );\r\n  });\r\n\r\n  addTask$ = createEffect(() => {\r\n    // console.log('Setting up addTask$ effect');\r\n    return this.actions$.pipe(\r\n      // tap(action => console.log('Action in pipe:', action)),\r\n      ofType(taskActions.addTask),\r\n      // tap(() => alert('addTask action caught')),\r\n        map(_ => taskActions.loadTasksSuccess())\r\n      )})  \r\n     \r\nremoveTask$ = createEffect(() => {\r\n  // console.log('Setting up addTask$ effect');\r\n  return this.actions$.pipe(\r\n    // tap(action => console.log('Action in pipe:', action)),\r\n    ofType(taskActions.removeTask),\r\n    // tap(() => alert('addTask action caught')),\r\n      map(_ => taskActions.loadTasksSuccess())\r\n    )})  \r\nupdateTask$ = createEffect(() => {\r\n  return this.actions$.pipe(\r\n    ofType(taskActions.updateTask),\r\n      map(_ => taskActions.loadTasksSuccess())\r\n    )})  \r\n} ","export interface Task {\r\n  id: number;\r\n  text: string;\r\n  completed?: boolean;\r\n}\r\n\r\nexport interface TodoState {\r\n  tasks: Task[];\r\n\r\n}\r\n\r\nexport const initialState: TodoState = {\r\n  tasks:[]=[],\r\n\r\n}; ","import { createReducer, on } from '@ngrx/store';\r\nimport { TodoState } from './todo.state';\r\nimport { taskActions} from './todo.actions';\r\nimport { initialState } from './todo.state';\r\n\r\nexport const todoReducer = createReducer(\r\ninitialState, \r\n  on(taskActions.loadTasks, state => ({\r\n    ...state,\r\n    loading: true\r\n  })),\r\n  on(taskActions.loadTasksSuccess, (state) => ({\r\n    ...state,\r\n    loading: false,\r\n  })),\r\n  on(taskActions.loadTasksFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n  })),\r\n  on(taskActions.addTask, (state, { task }) => ({\r\n    ...state,\r\n    tasks: [...state.tasks, task] // דחיפת הנתון החדש למערך\r\n\r\n   })),\r\n  on(taskActions.removeTask, (state, { id }) => ({\r\n    ...state,\r\n    tasks: state.tasks.filter(task => task.id !== id)\r\n  })),\r\n  on(taskActions.updateTask, (state, { id,newText }) => {\r\n    const taskExists = state.tasks.some(task => task.id === id);\r\n    if (!taskExists) {\r\n      alert(\"not exists\")\r\n      return state; // No changes if the task doesn't exist\r\n    }\r\n    return {\r\n      ...state,\r\n      tasks: state.tasks.map(task =>\r\n        task.id === id\r\n          ? { ...task, text: newText } // Update the task\r\n          : task // Keep other tasks unchanged\r\n      )\r\n    };\r\n  })\r\n);\r\n","import { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\r\nimport { TodoState } from './todo.state';\r\nimport { Task } from './todo.state';\r\n\r\nexport const taskFeatureSelector: MemoizedSelector<object, TodoState>  = createFeatureSelector<TodoState>('todos');\r\n\r\nexport const selectAllTodos$ : MemoizedSelector<object, Task[]> =\r\ncreateSelector(\r\n   taskFeatureSelector,\r\n     ({tasks}) => tasks );\r\n\r\n\r\n\r\n\r\n// export const selectTodoLoading = createSelector(\r\n//   selectTodoState,\r\n//   (state: TodoState) => state\r\n// ); ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; \nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressService {\n\n  constructor(private http:HttpClient) { }\n  \n  apiUrl='https://du-mock-checkout-7d42d0a76fbf.herokuapp.com';\n  //https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/#addresses\n  getDataWithToken(token: string): Observable<any> {\n\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    return this.http.get<any>(this.apiUrl+'/api/Address', { headers });\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n \n  constructor(private http:HttpClient) { }\n  \n  apiUrl='https://du-mock-checkout-7d42d0a76fbf.herokuapp.com';\n  //https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/#addresses\n  getPaimentOptions(token: string): Observable<any> {\n\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    // https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/api/Payment/options\n\n    return this.http.get<any>(this.apiUrl+'/api/Payment/Options', { headers });\n  }        \n  \n  \n  \n  getPaimentCreditCardOptions(token: string): Observable<any> {\n\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    // https://du-mock-checkout-7d42d0a76fbf.herokuapp.com/api/Payment/options\n\n    return this.http.get<any>(this.apiUrl+'/api/Payment/creditcards', { headers });\n  }   \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddressService } from './address.service';\nimport { PaymentService } from './payment.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers:[AddressService , PaymentService]\n})\nexport class ServicesModule { }\n","/*\n * Public API Surface of store\n */\n\nexport * from './lib/store.service';\nexport * from './lib/store.component';\nexport * from './lib/store.module';\n\nexport * from './lib/store/todo/todo.actions';\nexport * from './lib/store/todo/todo.effects';\nexport * from './lib/store/todo/todo.reducer';\nexport * from './lib/store/todo/todo.selectors';\nexport * from './lib/store/todo/todo.state';\nexport * from './lib/services/address.service';\nexport * from './lib/services/services.module';\nexport * from './lib/services/payment.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}}}