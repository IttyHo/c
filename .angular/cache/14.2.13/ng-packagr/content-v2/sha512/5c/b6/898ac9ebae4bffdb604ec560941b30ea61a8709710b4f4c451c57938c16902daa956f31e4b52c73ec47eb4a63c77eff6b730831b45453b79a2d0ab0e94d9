{"hash":"974876d2e11b8b820a73dab0861da39b7f1345ad","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport * as i1$1 from '@ngrx/store';\nimport { createAction, props, StoreModule, createReducer, on, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as i1 from '@ngrx/effects';\nimport { createEffect, ofType, EffectsModule } from '@ngrx/effects';\nimport { tap, map } from 'rxjs/operators';\n\nclass StoreService {\r\n    constructor() { }\r\n}\r\nStoreService.ɵfac = function StoreService_Factory(t) { return new (t || StoreService)(); };\r\nStoreService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: StoreService, factory: StoreService.ɵfac, providedIn: 'root' });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass StoreComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nStoreComponent.ɵfac = function StoreComponent_Factory(t) { return new (t || StoreComponent)(); };\r\nStoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StoreComponent, selectors: [[\"lib-store\"]], decls: 2, vars: 0, template: function StoreComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"p\");\r\n        i0.ɵɵtext(1, \" store works! \");\r\n        i0.ɵɵelementEnd();\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'lib-store', template: `\n    <p>\n      store works!\n    </p>\n  ` }]\r\n    }], function () { return []; }, null); })();\n\nconst loadTodos = createAction('[Todo] Load Todos');\r\nconst loadTodosSuccess = createAction('[Todo] Load Todos Success', props());\r\nconst loadTodosFailure = createAction('[Todo] Load Todos Failure', props());\n\nclass TodoEffects {\r\n    constructor(actions$) {\r\n        this.actions$ = actions$;\r\n        this.loadTodos$ = createEffect(() => {\r\n            console.log('Setting up loadTodos$ effect');\r\n            return this.actions$.pipe(tap(action => console.log('Action in pipe:', action)), ofType(loadTodos), tap(() => console.log('loadTodos action caught')), map(() => loadTodosSuccess({ todos: [] })));\r\n        });\r\n        console.log('TodoEffects constructor called!!!');\r\n        // נוסיף subscription לדיבאג\r\n        this.actions$.subscribe(action => {\r\n            console.log('Action received in effects:', action);\r\n        });\r\n    }\r\n}\r\nTodoEffects.ɵfac = function TodoEffects_Factory(t) { return new (t || TodoEffects)(i0.ɵɵinject(i1.Actions)); };\r\nTodoEffects.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TodoEffects, factory: TodoEffects.ɵfac, providedIn: 'root' });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TodoEffects, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return [{ type: i1.Actions }]; }, null); })();\n\nclass StoreLibModule {\r\n}\r\nStoreLibModule.ɵfac = function StoreLibModule_Factory(t) { return new (t || StoreLibModule)(); };\r\nStoreLibModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: StoreLibModule });\r\nStoreLibModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [TodoEffects], imports: [StoreModule.forRoot({}),\r\n        EffectsModule.forRoot([TodoEffects]), StoreModule,\r\n        EffectsModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreLibModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    StoreModule.forRoot({}),\r\n                    EffectsModule.forRoot([TodoEffects])\r\n                ],\r\n                exports: [\r\n                    StoreModule,\r\n                    EffectsModule\r\n                ],\r\n                providers: [TodoEffects]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(StoreLibModule, { imports: [i1$1.StoreRootModule, i1.EffectsRootModule], exports: [StoreModule,\r\n        EffectsModule] }); })();\n\nconst initialState = {\r\n    todos: [],\r\n    loading: false,\r\n    error: null\r\n};\n\nconst todoReducer = createReducer(initialState, on(loadTodos, state => ({\r\n    ...state,\r\n    loading: true\r\n})), on(loadTodosSuccess, (state, { todos }) => ({\r\n    ...state,\r\n    loading: false,\r\n    todos\r\n})), on(loadTodosFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n})));\n\nconst selectTodoState = createFeatureSelector('todos');\r\nconst selectAllTodos = createSelector(selectTodoState, (state) => state.todos);\r\nconst selectTodoLoading = createSelector(selectTodoState, (state) => state.loading);\n\n/*\r\n * Public API Surface of store\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { StoreComponent, StoreLibModule, StoreService, TodoEffects, initialState, loadTodos, loadTodosFailure, loadTodosSuccess, selectAllTodos, selectTodoLoading, selectTodoState, todoReducer };\n//# sourceMappingURL=store.mjs.map\n","map":{"version":3,"file":"store.mjs","sources":["../../../projects/store/src/lib/store.service.ts","../../../projects/store/src/lib/store.component.ts","../../../projects/store/src/lib/store/todo.actions.ts","../../../projects/store/src/lib/store/todo.effects.ts","../../../projects/store/src/lib/store.module.ts","../../../projects/store/src/lib/store/todo.state.ts","../../../projects/store/src/lib/store/todo.reducer.ts","../../../projects/store/src/lib/store/todo.selectors.ts","../../../projects/store/src/public-api.ts","../../../projects/store/src/store.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-store',\n  template: `\n    <p>\n      store works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class StoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { createAction, props } from '@ngrx/store';\r\nimport { Todo } from './todo.state';\r\n\r\n\r\n\r\nexport const loadTodos = createAction('[Todo] Load Todos');\r\nexport const loadTodosSuccess = createAction(\r\n  '[Todo] Load Todos Success',\r\n  props<{ todos: Todo[] }>()\r\n);\r\nexport const loadTodosFailure = createAction(\r\n  '[Todo] Load Todos Failure',\r\n  props<{ error: string }>()\r\n); ","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport * as TodoActions from './todo.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoEffects {\r\n  constructor(private actions$: Actions) {\r\n    console.log('TodoEffects constructor called!!!');\r\n    \r\n    // נוסיף subscription לדיבאג\r\n    this.actions$.subscribe(action => {\r\n      console.log('Action received in effects:', action);\r\n    });\r\n  }\r\n\r\n  loadTodos$ = createEffect(() => {\r\n    console.log('Setting up loadTodos$ effect');\r\n    return this.actions$.pipe(\r\n      tap(action => console.log('Action in pipe:', action)),\r\n      ofType(TodoActions.loadTodos),\r\n      tap(() => console.log('loadTodos action caught')),\r\n      map(() => TodoActions.loadTodosSuccess({ todos: [] }))\r\n    );\r\n  });\r\n} ","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TodoEffects } from './store/todo.effects';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([TodoEffects])\n  ],\n  exports: [\n    StoreModule,\n    EffectsModule\n  ],\n  providers:[TodoEffects]\n})\nexport class StoreLibModule { }\n","export interface Todo {\r\n  id: number;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\nexport interface TodoState {\r\n  todos: Todo[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport const initialState: TodoState = {\r\n  todos: [],\r\n  loading: false,\r\n  error: null\r\n}; ","import { createReducer, on } from '@ngrx/store';\r\nimport { TodoState, initialState } from './todo.state';\r\nimport * as TodoActions  from './todo.actions';\r\n\r\nexport const todoReducer = createReducer(\r\n  initialState,\r\n  on(TodoActions.loadTodos, state => ({\r\n    ...state,\r\n    loading: true\r\n  })),\r\n  on(TodoActions.loadTodosSuccess, (state, { todos }) => ({\r\n    ...state,\r\n    loading: false,\r\n    todos\r\n  })),\r\n  on(TodoActions.loadTodosFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n  }))\r\n); ","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { TodoState } from './todo.state';\r\n\r\nexport const selectTodoState = createFeatureSelector<TodoState>('todos');\r\n\r\nexport const selectAllTodos = createSelector(\r\n  selectTodoState,\r\n  (state: TodoState) => state.todos\r\n);\r\n\r\nexport const selectTodoLoading = createSelector(\r\n  selectTodoState,\r\n  (state: TodoState) => state.loading\r\n); ","/*\n * Public API Surface of store\n */\n\nexport * from './lib/store.service';\nexport * from './lib/store.component';\nexport * from './lib/store.module';\n\nexport * from './lib/store/todo.actions';\nexport * from './lib/store/todo.effects'\nexport * from './lib/store/todo.reducer'\nexport * from './lib/store/todo.selectors'\nexport * from './lib/store/todo.state'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["TodoActions.loadTodos","TodoActions.loadTodosSuccess","TodoActions.loadTodosFailure"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport * as i1$1 from '@ngrx/store';\nimport { createAction, props, StoreModule, createReducer, on, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as i1 from '@ngrx/effects';\nimport { createEffect, ofType, EffectsModule } from '@ngrx/effects';\nimport { tap, map } from 'rxjs/operators';\n\nclass StoreService {\r\n    constructor() { }\r\n}\r\nStoreService.ɵfac = function StoreService_Factory(t) { return new (t || StoreService)(); };\r\nStoreService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: StoreService, factory: StoreService.ɵfac, providedIn: 'root' });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreService, [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass StoreComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nStoreComponent.ɵfac = function StoreComponent_Factory(t) { return new (t || StoreComponent)(); };\r\nStoreComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StoreComponent, selectors: [[\"lib-store\"]], decls: 2, vars: 0, template: function StoreComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"p\");\r\n            i0.ɵɵtext(1, \" store works! \");\r\n            i0.ɵɵelementEnd();\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'lib-store', template: `\n    <p>\n      store works!\n    </p>\n  ` }]\r\n        }], function () { return []; }, null);\r\n})();\n\nconst loadTodos = createAction('[Todo] Load Todos');\r\nconst loadTodosSuccess = createAction('[Todo] Load Todos Success', props());\r\nconst loadTodosFailure = createAction('[Todo] Load Todos Failure', props());\n\nclass TodoEffects {\r\n    constructor(actions$) {\r\n        this.actions$ = actions$;\r\n        this.loadTodos$ = createEffect(() => {\r\n            console.log('Setting up loadTodos$ effect');\r\n            return this.actions$.pipe(tap(action => console.log('Action in pipe:', action)), ofType(loadTodos), tap(() => console.log('loadTodos action caught')), map(() => loadTodosSuccess({ todos: [] })));\r\n        });\r\n        console.log('TodoEffects constructor called!!!');\r\n        // נוסיף subscription לדיבאג\r\n        this.actions$.subscribe(action => {\r\n            console.log('Action received in effects:', action);\r\n        });\r\n    }\r\n}\r\nTodoEffects.ɵfac = function TodoEffects_Factory(t) { return new (t || TodoEffects)(i0.ɵɵinject(i1.Actions)); };\r\nTodoEffects.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TodoEffects, factory: TodoEffects.ɵfac, providedIn: 'root' });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TodoEffects, [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], function () { return [{ type: i1.Actions }]; }, null);\r\n})();\n\nclass StoreLibModule {\r\n}\r\nStoreLibModule.ɵfac = function StoreLibModule_Factory(t) { return new (t || StoreLibModule)(); };\r\nStoreLibModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: StoreLibModule });\r\nStoreLibModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [TodoEffects], imports: [StoreModule.forRoot({}),\r\n        EffectsModule.forRoot([TodoEffects]), StoreModule,\r\n        EffectsModule] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreLibModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        StoreModule.forRoot({}),\r\n                        EffectsModule.forRoot([TodoEffects])\r\n                    ],\r\n                    exports: [\r\n                        StoreModule,\r\n                        EffectsModule\r\n                    ],\r\n                    providers: [TodoEffects]\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(StoreLibModule, { imports: [i1$1.StoreRootModule, i1.EffectsRootModule], exports: [StoreModule,\r\n            EffectsModule] });\r\n})();\n\nconst initialState = {\r\n    todos: [],\r\n    loading: false,\r\n    error: null\r\n};\n\nconst todoReducer = createReducer(initialState, on(loadTodos, state => (Object.assign(Object.assign({}, state), { loading: true }))), on(loadTodosSuccess, (state, { todos }) => (Object.assign(Object.assign({}, state), { loading: false, todos }))), on(loadTodosFailure, (state, { error }) => (Object.assign(Object.assign({}, state), { loading: false, error }))));\n\nconst selectTodoState = createFeatureSelector('todos');\r\nconst selectAllTodos = createSelector(selectTodoState, (state) => state.todos);\r\nconst selectTodoLoading = createSelector(selectTodoState, (state) => state.loading);\n\n/*\r\n * Public API Surface of store\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { StoreComponent, StoreLibModule, StoreService, TodoEffects, initialState, loadTodos, loadTodosFailure, loadTodosSuccess, selectAllTodos, selectTodoLoading, selectTodoState, todoReducer };\n//# sourceMappingURL=store.mjs.map\n","map":{"version":3,"file":"store.mjs","sources":["../../../projects/store/src/lib/store.service.ts","../../../projects/store/src/lib/store.component.ts","../../../projects/store/src/lib/store/todo.actions.ts","../../../projects/store/src/lib/store/todo.effects.ts","../../../projects/store/src/lib/store.module.ts","../../../projects/store/src/lib/store/todo.state.ts","../../../projects/store/src/lib/store/todo.reducer.ts","../../../projects/store/src/lib/store/todo.selectors.ts","../../../projects/store/src/public-api.ts","../../../projects/store/src/store.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-store',\n  template: `\n    <p>\n      store works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class StoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { createAction, props } from '@ngrx/store';\r\nimport { Todo } from './todo.state';\r\n\r\n\r\n\r\nexport const loadTodos = createAction('[Todo] Load Todos');\r\nexport const loadTodosSuccess = createAction(\r\n  '[Todo] Load Todos Success',\r\n  props<{ todos: Todo[] }>()\r\n);\r\nexport const loadTodosFailure = createAction(\r\n  '[Todo] Load Todos Failure',\r\n  props<{ error: string }>()\r\n); ","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport * as TodoActions from './todo.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoEffects {\r\n  constructor(private actions$: Actions) {\r\n    console.log('TodoEffects constructor called!!!');\r\n    \r\n    // נוסיף subscription לדיבאג\r\n    this.actions$.subscribe(action => {\r\n      console.log('Action received in effects:', action);\r\n    });\r\n  }\r\n\r\n  loadTodos$ = createEffect(() => {\r\n    console.log('Setting up loadTodos$ effect');\r\n    return this.actions$.pipe(\r\n      tap(action => console.log('Action in pipe:', action)),\r\n      ofType(TodoActions.loadTodos),\r\n      tap(() => console.log('loadTodos action caught')),\r\n      map(() => TodoActions.loadTodosSuccess({ todos: [] }))\r\n    );\r\n  });\r\n} ","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TodoEffects } from './store/todo.effects';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([TodoEffects])\n  ],\n  exports: [\n    StoreModule,\n    EffectsModule\n  ],\n  providers:[TodoEffects]\n})\nexport class StoreLibModule { }\n","export interface Todo {\r\n  id: number;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\nexport interface TodoState {\r\n  todos: Todo[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport const initialState: TodoState = {\r\n  todos: [],\r\n  loading: false,\r\n  error: null\r\n}; ","import { createReducer, on } from '@ngrx/store';\r\nimport { TodoState, initialState } from './todo.state';\r\nimport * as TodoActions  from './todo.actions';\r\n\r\nexport const todoReducer = createReducer(\r\n  initialState,\r\n  on(TodoActions.loadTodos, state => ({\r\n    ...state,\r\n    loading: true\r\n  })),\r\n  on(TodoActions.loadTodosSuccess, (state, { todos }) => ({\r\n    ...state,\r\n    loading: false,\r\n    todos\r\n  })),\r\n  on(TodoActions.loadTodosFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n  }))\r\n); ","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { TodoState } from './todo.state';\r\n\r\nexport const selectTodoState = createFeatureSelector<TodoState>('todos');\r\n\r\nexport const selectAllTodos = createSelector(\r\n  selectTodoState,\r\n  (state: TodoState) => state.todos\r\n);\r\n\r\nexport const selectTodoLoading = createSelector(\r\n  selectTodoState,\r\n  (state: TodoState) => state.loading\r\n); ","/*\n * Public API Surface of store\n */\n\nexport * from './lib/store.service';\nexport * from './lib/store.component';\nexport * from './lib/store.module';\n\nexport * from './lib/store/todo.actions';\nexport * from './lib/store/todo.effects'\nexport * from './lib/store/todo.reducer'\nexport * from './lib/store/todo.selectors'\nexport * from './lib/store/todo.state'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["TodoActions.loadTodos","TodoActions.loadTodosSuccess","TodoActions.loadTodosFailure"],"mappings":"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"}}}