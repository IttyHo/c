{"ast":null,"code":"import { map, tap } from 'rxjs';\nimport { selectAllTodos$, Task, taskActions } from 'store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\n\nfunction HomeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 2);\n    i0.ɵɵtext(2, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 2);\n    i0.ɵɵtext(4, \"text\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 2);\n    i0.ɵɵtext(6, \"completed\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerText\", task_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerText\", task_r1.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerText\", task_r1.completed);\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(store) {\n      this.store = store;\n      this.tasks$ = this.store.select(selectAllTodos$).pipe(tap(ans => alert(ans)), tap(ans => alert(typeof ans)), map(ans => Object.entries(ans)), tap(ans => alert(ans)), tap(ans => alert(typeof ans)));\n    }\n\n    ngOnInit() {\n      this.store.dispatch(taskActions.loadTasks());\n    }\n\n    addTask() {\n      this.id++;\n      let task = {\n        id: this.id,\n        text: \"my first task\",\n        completed: true\n      };\n      this.store.dispatch(taskActions.addTask({\n        task\n      }));\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 6,\n    vars: 3,\n    consts: [[3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"innerText\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"home works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_2_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵtext(3, \"ADD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, HomeComponent_div_4_Template, 7, 3, \"div\", 1);\n        i0.ɵɵpipe(5, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx.tasks$));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.AsyncPipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5zY3NzIn0= */\"]\n  });\n  return HomeComponent;\n})();","map":{"version":3,"mappings":"AAEA,SAASA,GAAT,EAA0BC,GAA1B,QAAqC,MAArC;AACA,SAASC,eAAT,EAA0BC,IAA1B,EAAgCC,WAAhC,QAA6D,OAA7D;;;;;;;ICDAC,4BAAyC,CAAzC,EAAyC,MAAzC,EAAyC,CAAzC;IACgCA;IAAEA;IAC9BA;IAA8BA;IAAIA;IAClCA;IAAmCA;IAASA;;;;;IAFtCA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;;;;ADKV,WAAaC,aAAb;EAAM,MAAOA,aAAP,CAAoB;IAaxBC,YAAoBC,KAApB,EAA+B;MAAX;MAXrB,cAA0B,KAAKA,KAAL,CAAWC,MAAX,CAAkBP,eAAlB,EAAmCQ,IAAnC,CACzBT,GAAG,CAACU,GAAG,IAAEC,KAAK,CAACD,GAAD,CAAX,CADsB,EAEzBV,GAAG,CAACU,GAAG,IAAEC,KAAK,CAAC,OAAOD,GAAR,CAAX,CAFsB,EAGzBX,GAAG,CAACW,GAAG,IAAEE,MAAM,CAACC,OAAP,CAAeH,GAAf,CAAN,CAHsB,EAIzBV,GAAG,CAACU,GAAG,IAAEC,KAAK,CAACD,GAAD,CAAX,CAJsB,EAMzBV,GAAG,CAACU,GAAG,IAAEC,KAAK,CAAC,OAAOD,GAAR,CAAX,CANsB,CAA1B;IAWqC;;IAIpCI,QAAQ;MACN,KAAKP,KAAL,CAAWQ,QAAX,CAAoBZ,WAAW,CAACa,SAAZ,EAApB;IAED;;IAEHC,OAAO;MACL,KAAKC,EAAL;MACA,IAAIC,IAAI,GAAO;QAACD,EAAE,EAAC,KAAKA,EAAT;QAAYE,IAAI,EAAC,eAAjB;QAAiCC,SAAS,EAAC;MAA3C,CAAf;MACA,KAAKd,KAAL,CAAWQ,QAAX,CAAoBZ,WAAW,CAACc,OAAZ,CAAoB;QAACE;MAAD,CAApB,CAApB;IACD;;EA1ByB;;;qBAAbd,eAAaD;EAAA;;;UAAbC;IAAaiB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCV1BtB;QAAGA;QAAWA;QACdA;QAAQA;UAAA,OAASuB,aAAT;QAAkB,CAAlB;QAAoBvB;QAAGA;QAC/BA;;;;;QAAsBA;QAAAA;;;;;;EDQtB,OAAaC,aAAb;AAAA","names":["map","tap","selectAllTodos$","Task","taskActions","i0","HomeComponent","constructor","store","select","pipe","ans","alert","Object","entries","ngOnInit","dispatch","loadTasks","addTask","id","task","text","completed","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IttyHorowitz\\mini project\\to-do-list\\src\\app\\pages\\home\\home.component.ts","C:\\IttyHorowitz\\mini project\\to-do-list\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { map, Observable, tap } from 'rxjs';\nimport { selectAllTodos$, Task, taskActions, TodoState} from 'store';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n tasks$ : Observable< any>=this.store.select(selectAllTodos$).pipe(\n  tap(ans=>alert(ans)),\n  tap(ans=>alert(typeof(ans))),\n  map(ans=>Object.entries(ans)),\n  tap(ans=>alert(ans)),\n\n  tap(ans=>alert(typeof(ans))),\n\n );\n  id: any;\n\n  constructor(private store:Store) { }\n\n\n\n  ngOnInit() {\n    this.store.dispatch(taskActions.loadTasks());\n\n  }\n\naddTask(){\n  this.id++\n  let task :Task={id:this.id,text:\"my first task\",completed:true}\n  this.store.dispatch(taskActions.addTask({task}))\n}\n\n\n}\n","<p>home works!</p>\n<button (click)=\"addTask()\">ADD</button>\n<div *ngFor=\"let task of tasks$ | async\">\n    <span [innerText]=\"task.id\">ID</span>\n    <span [innerText]=\"task.text\">text</span>\n    <span [innerText]=\"task.completed\">completed</span>\n\n\n</div>\n"]},"metadata":{},"sourceType":"module"}