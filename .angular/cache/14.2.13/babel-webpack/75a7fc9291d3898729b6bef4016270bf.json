{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { map, tap } from 'rxjs/operators';\nimport { taskActions } from './todo.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nexport let TodoEffects = /*#__PURE__*/(() => {\n  class TodoEffects {\n    constructor(actions$) {\n      this.actions$ = actions$;\n      this.loadTodos$ = createEffect(() => {\n        console.log('Setting up loadTodos$ effect');\n        return this.actions$.pipe(tap(action => console.log('Action in pipe:', action)), ofType(taskActions.loadTasks), tap(() => alert('loadTodos action caught')), map(() => taskActions.loadTasksSuccess()));\n      });\n      alert('TodoEffects constructor called!!!'); // נוסיף subscription לדיבאג\n\n      this.actions$.subscribe(action => {\n        console.log('Action received in effects:', action);\n      });\n    }\n\n  }\n\n  TodoEffects.ɵfac = function TodoEffects_Factory(t) {\n    return new (t || TodoEffects)(i0.ɵɵinject(i1.Actions));\n  };\n\n  TodoEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoEffects,\n    factory: TodoEffects.ɵfac,\n    providedIn: 'root'\n  });\n  return TodoEffects;\n})();","map":{"version":3,"mappings":"AACA,SAAkBA,YAAlB,EAAgCC,MAAhC,QAA8C,eAA9C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA2B,gBAA3B;;;AAKA,WAAaC,WAAb;EAAM,MAAOA,WAAP,CAAkB;IACtBC,YAAoBC,QAApB,EAAqC;MAAjB;MASpB,kBAAaP,YAAY,CAAC,MAAK;QAC7BQ,OAAO,CAACC,GAAR,CAAY,8BAAZ;QACA,OAAO,KAAKF,QAAL,CAAcG,IAAd,CACLP,GAAG,CAACQ,MAAM,IAAIH,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,MAA/B,CAAX,CADE,EAELV,MAAM,CAACG,WAAW,CAACQ,SAAb,CAFD,EAGLT,GAAG,CAAC,MAAMU,KAAK,CAAC,yBAAD,CAAZ,CAHE,EAILX,GAAG,CAAC,MAAME,WAAW,CAACU,gBAAZ,EAAP,CAJE,CAAP;MAMD,CARwB,CAAzB;MARED,KAAK,CAAC,mCAAD,CAAL,CADmC,CAGnC;;MACA,KAAKN,QAAL,CAAcQ,SAAd,CAAwBJ,MAAM,IAAG;QAC/BH,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CE,MAA3C;MACD,CAFD;IAGD;;EARqB;;;qBAAXN,aAAWW;EAAA;;;WAAXX;IAAWY,SAAXZ,WAAW;IAAAa,YAFV;;EAEd,OAAab,WAAb;AAAA","names":["createEffect","ofType","map","tap","taskActions","TodoEffects","constructor","actions$","console","log","pipe","action","loadTasks","alert","loadTasksSuccess","subscribe","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\IttyHorowitz\\mini project\\to-do-list\\projects\\store\\src\\lib\\store\\todo\\todo.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { taskActions} from './todo.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoEffects {\r\n  constructor(private actions$: Actions) {\r\n    alert('TodoEffects constructor called!!!');\r\n    \r\n    // נוסיף subscription לדיבאג\r\n    this.actions$.subscribe(action => {\r\n      console.log('Action received in effects:', action);\r\n    });\r\n  }\r\n\r\n  loadTodos$ = createEffect(() => {\r\n    console.log('Setting up loadTodos$ effect');\r\n    return this.actions$.pipe(\r\n      tap(action => console.log('Action in pipe:', action)),\r\n      ofType(taskActions.loadTasks),\r\n      tap(() => alert('loadTodos action caught')),\r\n      map(() => taskActions.loadTasksSuccess())\r\n    );\r\n  });\r\n} "]},"metadata":{},"sourceType":"module"}