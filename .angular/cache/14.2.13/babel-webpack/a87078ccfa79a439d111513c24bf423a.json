{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CheckoutComponent = class CheckoutComponent {\n  constructor(addressService, paymentService) {\n    this.addressService = addressService;\n    this.paymentService = paymentService;\n    this.addresses = [{\n      name: 'Home',\n      street: '123 Main St',\n      city: 'Tel Aviv'\n    }, {\n      name: 'Office',\n      street: '456 Office Rd',\n      city: 'Haifa'\n    }];\n    this.selectedAddress = this.addresses[0];\n    this.showAddressForm = false;\n    this.newAddress = {\n      name: '',\n      street: '',\n      city: ''\n    };\n    this.paymentMethods = ['Credit Card', 'PayPal', 'Bank Transfer'];\n    this.selectedPaymentMethod = this.paymentMethods[0];\n    this.cartItems = [{\n      name: 'Item 1',\n      quantity: 2,\n      price: 50\n    }, {\n      name: 'Item 2',\n      quantity: 1,\n      price: 30\n    }];\n  }\n\n  toggleAddressForm() {\n    this.showAddressForm = !this.showAddressForm;\n  }\n\n  ngOnInit() {\n    this.addressService.getDataWithToken('C4D5C577E9914C4B9C9BF46DF9914A28').subscribe(address => {\n      this.addresses = address;\n      console.log({\n        address\n      });\n    });\n  }\n\n  addAddress() {\n    this.addresses.push(Object.assign({}, this.newAddress));\n    this.newAddress = {\n      name: '',\n      street: '',\n      city: ''\n    };\n    this.showAddressForm = false;\n  }\n\n  selectAddress(address) {\n    this.selectedAddress = address;\n  }\n\n  calculateTotal() {\n    return this.cartItems.reduce((total, item) => total + item.quantity * item.price, 0);\n  }\n\n  completeCheckout() {\n    alert('Checkout completed!');\n  }\n\n};\nCheckoutComponent = __decorate([Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})], CheckoutComponent);\nexport { CheckoutComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,QAAkC,eAAlC;AAQA,IAAaC,iBAAiB,GAA9B,MAAaA,iBAAb,CAA8B;EAG5BC,YAAoBC,cAApB,EACUC,cADV,EACuC;IADnB;IACV;IAKV,iBAAY,CACV;MAAEC,IAAI,EAAE,MAAR;MAAgBC,MAAM,EAAE,aAAxB;MAAuCC,IAAI,EAAE;IAA7C,CADU,EAEV;MAAEF,IAAI,EAAE,QAAR;MAAkBC,MAAM,EAAE,eAA1B;MAA2CC,IAAI,EAAE;IAAjD,CAFU,CAAZ;IAIA,uBAAkB,KAAKC,SAAL,CAAe,CAAf,CAAlB;IACA,uBAAkB,KAAlB;IACA,kBAAa;MAAEH,IAAI,EAAE,EAAR;MAAYC,MAAM,EAAE,EAApB;MAAwBC,IAAI,EAAE;IAA9B,CAAb;IAEA,sBAAiB,CAAC,aAAD,EAAgB,QAAhB,EAA0B,eAA1B,CAAjB;IACA,6BAAwB,KAAKE,cAAL,CAAoB,CAApB,CAAxB;IAEA,iBAAY,CACV;MAAEJ,IAAI,EAAE,QAAR;MAAkBK,QAAQ,EAAE,CAA5B;MAA+BC,KAAK,EAAE;IAAtC,CADU,EAEV;MAAEN,IAAI,EAAE,QAAR;MAAkBK,QAAQ,EAAE,CAA5B;MAA+BC,KAAK,EAAE;IAAtC,CAFU,CAAZ;EAbC;;EAkBDC,iBAAiB;IACf,KAAKC,eAAL,GAAuB,CAAC,KAAKA,eAA7B;EACD;;EAGDC,QAAQ;IACN,KAAKX,cAAL,CAAoBY,gBAApB,CAAqC,kCAArC,EAAyEC,SAAzE,CAAmFC,OAAO,IAAE;MAC1F,KAAKT,SAAL,GAAeS,OAAf;MACAC,OAAO,CAACC,GAAR,CAAY;QAACF;MAAD,CAAZ;IAED,CAJD;EAMD;;EAEDG,UAAU;IACR,KAAKZ,SAAL,CAAea,IAAf,CAAmBC,kBAAM,KAAKC,UAAX,CAAnB;IACA,KAAKA,UAAL,GAAkB;MAAElB,IAAI,EAAE,EAAR;MAAYC,MAAM,EAAE,EAApB;MAAwBC,IAAI,EAAE;IAA9B,CAAlB;IACA,KAAKM,eAAL,GAAuB,KAAvB;EACD;;EAEDW,aAAa,CAACP,OAAD,EAAa;IACxB,KAAKQ,eAAL,GAAuBR,OAAvB;EACD;;EAEDS,cAAc;IACZ,OAAO,KAAKC,SAAL,CAAeC,MAAf,CAAsB,CAACC,KAAD,EAAQC,IAAR,KAAiBD,KAAK,GAAGC,IAAI,CAACpB,QAAL,GAAgBoB,IAAI,CAACnB,KAApE,EAA2E,CAA3E,CAAP;EACD;;EAEDoB,gBAAgB;IACdC,KAAK,CAAC,qBAAD,CAAL;EACD;;AAvD2B,CAA9B;AAAa/B,iBAAiB,eAL7BD,SAAS,CAAC;EACTiC,QAAQ,EAAE,cADD;EAETC,WAAW,EAAE,2BAFJ;EAGTC,SAAS,EAAE,CAAC,2BAAD;AAHF,CAAD,CAKoB,GAAjBlC,iBAAiB,CAAjB;SAAAA","names":["Component","CheckoutComponent","constructor","addressService","paymentService","name","street","city","addresses","paymentMethods","quantity","price","toggleAddressForm","showAddressForm","ngOnInit","getDataWithToken","subscribe","address","console","log","addAddress","push","Object","newAddress","selectAddress","selectedAddress","calculateTotal","cartItems","reduce","total","item","completeCheckout","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\IttyHorowitz\\mini project\\to-do-list\\src\\app\\pages\\checkout\\checkout.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AddressService , PaymentService } from 'store';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit{\n\n\n  constructor(private addressService:AddressService,\n    private paymentService:PaymentService\n  ){\n\n  }\n\n  addresses = [\n    { name: 'Home', street: '123 Main St', city: 'Tel Aviv' },\n    { name: 'Office', street: '456 Office Rd', city: 'Haifa' }\n  ];\n  selectedAddress = this.addresses[0];\n  showAddressForm = false;\n  newAddress = { name: '', street: '', city: '' };\n\n  paymentMethods = ['Credit Card', 'PayPal', 'Bank Transfer'];\n  selectedPaymentMethod = this.paymentMethods[0];\n\n  cartItems = [\n    { name: 'Item 1', quantity: 2, price: 50 },\n    { name: 'Item 2', quantity: 1, price: 30 }\n  ];\n\n  toggleAddressForm() {\n    this.showAddressForm = !this.showAddressForm;\n  }\n\n\n  ngOnInit() {\n    this.addressService.getDataWithToken('C4D5C577E9914C4B9C9BF46DF9914A28').subscribe(address=>{\n      this.addresses=address\n      console.log({address});\n      \n    })\n    \n  }\n\n  addAddress() {\n    this.addresses.push({ ...this.newAddress });\n    this.newAddress = { name: '', street: '', city: '' };\n    this.showAddressForm = false;\n  }\n\n  selectAddress(address: any) {\n    this.selectedAddress = address;\n  }\n\n  calculateTotal() {\n    return this.cartItems.reduce((total, item) => total + item.quantity * item.price, 0);\n  }\n\n  completeCheckout() {\n    alert('Checkout completed!');\n  }\n}"]},"metadata":{},"sourceType":"module"}