{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeModule } from './pages/home/home.module';\nimport { ServicesModule, StoreLibModule } from 'store';\nimport { TodoStoreModule } from '@store/store/todo/todo-store.module';\nimport { CheckoutModule } from './pages/checkout/checkout.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ConfigurationService } from 'store';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@ngrx/effects\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: APP_INITIALIZER,\n      useFactory: initConfigValues,\n      deps: [ConfigurationService],\n      multi: true\n    }],\n    imports: [BrowserModule, AppRoutingModule, CheckoutModule, ServicesModule, HttpClientModule, HomeModule, StoreModule.forRoot({}), EffectsModule.forRoot([]), StoreLibModule, TodoStoreModule, BrowserAnimationsModule]\n  });\n  return AppModule;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, CheckoutModule, ServicesModule, HttpClientModule, HomeModule, i1.StoreRootModule, i2.EffectsRootModule, StoreLibModule, TodoStoreModule, BrowserAnimationsModule]\n  });\n})();\n\nexport function initConfigValues(config) {\n  return _ => config.initConfiguration(environment.configPath);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,eAAT,QAA0C,eAA1C;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,OAA/C;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,oBAAT,QAAqC,OAArC;AACA,SAASC,uBAAT,QAAwC,sCAAxC;;;;AAyBA,WAAaC,SAAb;EAAM,MAAOA,SAAP,CAAgB;;;qBAATA;EAAS;;;UAATA;IAASC,YAFRX,YAEQ;;;eALT,CACT;MAAEY,OAAO,EAAEhB,eAAX;MAA4BiB,UAAU,EAAEC,gBAAxC;MAA0DC,IAAI,EAAE,CAACP,oBAAD,CAAhE;MAAwFQ,KAAK,EAAE;IAA/F,CADS;IAEVC,UAdCtB,aAcD,EAbCI,gBAaD,EAZCM,cAYD,EAXCH,cAWD,EAVCI,gBAUD,EATCL,UASD,EARCH,WAAW,CAACoB,OAAZ,CAAoB,EAApB,CAQD,EAPCrB,aAAa,CAACqB,OAAd,CAAuB,EAAvB,CAOD,EANCf,cAMD,EALCC,eAKD,EAJCK,uBAID;;EAGH,OAAaC,SAAb;AAAA;;;2EAAaA,WAAS;IAAAS,eArBlBnB,YAqBkB;IArBNiB,UAIZtB,aAJY,EAKZI,gBALY,EAMZM,cANY,EAOZH,cAPY,EAQZI,gBARY,EASZL,UATY,EASFmB,kBATE,EASFC,oBATE,EAYZlB,cAZY,EAaZC,eAbY,EAcZK,uBAdY;EAqBM;AAPK;;AAU3B,OAAM,SAAUK,gBAAV,CAA2BQ,MAA3B,EAAuD;EAC3D,OAAQC,CAAC,IAAID,MAAM,CAACE,iBAAP,CAAyBjB,WAAW,CAACkB,UAArC,CAAb;AACD","names":["BrowserModule","APP_INITIALIZER","EffectsModule","StoreModule","AppRoutingModule","AppComponent","HomeModule","ServicesModule","StoreLibModule","TodoStoreModule","CheckoutModule","HttpClientModule","environment","ConfigurationService","BrowserAnimationsModule","AppModule","bootstrap","provide","useFactory","initConfigValues","deps","multi","imports","forRoot","declarations","i1","i2","config","_","initConfiguration","configPath"],"sourceRoot":"","sources":["C:\\IttyHorowitz\\mini project\\to-do-list\\src\\app\\app.module.ts"],"sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeModule } from './pages/home/home.module';\nimport { ServicesModule, StoreLibModule } from 'store';\nimport { TodoStoreModule } from '@store/store/todo/todo-store.module';\nimport { CheckoutModule } from './pages/checkout/checkout.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ConfigurationService } from 'store';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CheckoutModule,\n    ServicesModule,\n    HttpClientModule,\n    HomeModule,\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot( []),\n    StoreLibModule,\n    TodoStoreModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: APP_INITIALIZER, useFactory: initConfigValues, deps: [ConfigurationService], multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\nexport function initConfigValues(config: ConfigurationService) {\n  return (_ => config.initConfiguration(environment.configPath));\n}"]},"metadata":{},"sourceType":"module"}