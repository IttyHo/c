{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { map, tap } from 'rxjs';\nimport { selectAllTodos$, Task, taskActions } from 'store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction HomeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 5);\n    i0.ɵɵtext(2, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 5);\n    i0.ɵɵtext(4, \"text\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 5);\n    i0.ɵɵtext(6, \"completed\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerText\", task_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerText\", task_r1.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerText\", task_r1.completed);\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(store) {\n      this.store = store;\n      this.tasks$ = this.store.select(selectAllTodos$).pipe(tap(ans => console.log(ans, \"ans\")), // tap(ans=>alert(typeof(ans))),\n      map(ans => ans.tasks));\n      this.id = 0;\n      this.completed = true;\n    }\n\n    ngOnInit() {\n      this.store.dispatch(taskActions.loadTasks());\n      this.initForm();\n    }\n\n    addTask() {\n      this.id++;\n      this.completed = !this.completed;\n      let task = {\n        id: this.id,\n        text: `my ${this.id} task    `,\n        completed: true\n      };\n      this.store.dispatch(taskActions.addTask({\n        task\n      }));\n    }\n\n    initForm() {\n      this.form = new FormGroup({\n        taskValue: new FormControl('123'),\n        completed: new FormControl('456')\n      });\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 9,\n    vars: 6,\n    consts: [[3, \"formGroup\"], [\"type\", \"text\", \"placeholder\", \"Enter your task\", 3, \"formControl\"], [\"type\", \"text\", \"placeholder\", \"Enter if you completed\", 3, \"formControl\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"innerText\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"home works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵelement(3, \"input\", 1)(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_5_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵtext(6, \"ADD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, HomeComponent_div_7_Template, 7, 3, \"div\", 4);\n        i0.ɵɵpipe(8, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.taskValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.completed);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 4, ctx.tasks$));\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormControlDirective, i3.FormGroupDirective, i2.AsyncPipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5zY3NzIn0= */\"]\n  });\n  return HomeComponent;\n})();","map":{"version":3,"mappings":"AACA,SAAsBA,WAAtB,EAAmCC,SAAnC,QAAoD,gBAApD;AAEA,SAASC,GAAT,EAA0BC,GAA1B,QAAqC,MAArC;AACA,SAASC,eAAT,EAA0BC,IAA1B,EAAgCC,WAAhC,QAA6D,OAA7D;;;;;;;;ICEAC,4BAAyC,CAAzC,EAAyC,MAAzC,EAAyC,CAAzC;IACgCA;IAAEA;IAC9BA;IAA8BA;IAAIA;IAClCA;IAAmCA;IAASA;;;;;IAFtCA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;;;;ADEV,WAAaC,aAAb;EAAM,MAAOA,aAAP,CAAoB;IAmBxBC,YAAoBC,KAApB,EAA+B;MAAX;MAjBrB,cAA0B,KAAKA,KAAL,CAAWC,MAAX,CAAkBP,eAAlB,EAAmCQ,IAAnC,CACzBT,GAAG,CAACU,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAgB,KAAhB,CAAN,CADsB,EAEzB;MACAX,GAAG,CAACW,GAAG,IAAEA,GAAG,CAACG,KAAV,CAHsB,CAA1B;MAaC,UAAW,CAAX;MACA,iBAAqB,IAArB;IAGoC;;IAIpCC,QAAQ;MACN,KAAKP,KAAL,CAAWQ,QAAX,CAAoBZ,WAAW,CAACa,SAAZ,EAApB;MACJ,KAAKC,QAAL;IACG;;IAEHC,OAAO;MACL,KAAKC,EAAL;MACA,KAAKC,SAAL,GAAe,CAAC,KAAKA,SAArB;MACA,IAAIC,IAAI,GAAO;QAACF,EAAE,EAAC,KAAKA,EAAT;QAAYG,IAAI,EAAC,MAAM,KAAKH,EAAE,WAA9B;QAA0CC,SAAS,EAAC;MAApD,CAAf;MACA,KAAKb,KAAL,CAAWQ,QAAX,CAAoBZ,WAAW,CAACe,OAAZ,CAAoB;QAACG;MAAD,CAApB,CAApB;IACD;;IAEDJ,QAAQ;MACR,KAAKM,IAAL,GAAU,IAAIzB,SAAJ,CAAc;QACtB0B,SAAS,EAAG,IAAI3B,WAAJ,CAAgB,KAAhB,CADU;QAEtBuB,SAAS,EAAG,IAAIvB,WAAJ,CAAgB,KAAhB;MAFU,CAAd,CAAV;IAIC;;EAxCyB;;;qBAAbQ,eAAaD;EAAA;;;UAAbC;IAAaoB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCX1BzB;QAAGA;QAAWA;QACTA;QACLA,4BAA2E,CAA3E,EAA2E,OAA3E,EAA2E,CAA3E;QAECA;QACDA;QAAQA;UAAA,OAAS0B,aAAT;QAAkB,CAAlB;QAAoB1B;QAAGA;QAC/BA;;;;;QALWA;QAAAA;QACQA;QAAAA;QACAA;QAAAA;QAGGA;QAAAA;;;;;;EDKtB,OAAaC,aAAb;AAAA","names":["FormControl","FormGroup","map","tap","selectAllTodos$","Task","taskActions","i0","HomeComponent","constructor","store","select","pipe","ans","console","log","tasks","ngOnInit","dispatch","loadTasks","initForm","addTask","id","completed","task","text","form","taskValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IttyHorowitz\\mini project\\to-do-list\\src\\app\\pages\\home\\home.component.ts","C:\\IttyHorowitz\\mini project\\to-do-list\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { map, Observable, tap } from 'rxjs';\nimport { selectAllTodos$, Task, taskActions, TodoState} from 'store';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n tasks$ : Observable< any>=this.store.select(selectAllTodos$).pipe(\n  tap(ans=>console.log(ans,\"ans\")),\n  // tap(ans=>alert(typeof(ans))),\n  map(ans=>ans.tasks),\n\n\n  // map(ans=>Object.entries(ans)),\n  \n  // tap(ans=>alert(ans)),\n\n  // tap(ans=>alert(typeof(ans))),\n\n );\n  id: number=0;\n  completed: boolean = true;\n  form: FormGroup<{ taskValue: FormControl<string>,completed : FormControl<string>}>;\n\n  constructor(private store:Store) { }\n\n\n\n  ngOnInit() {\n    this.store.dispatch(taskActions.loadTasks());\nthis.initForm()\n  }\n\naddTask(){\n  this.id++\n  this.completed=!this.completed\n  let task :Task={id:this.id,text:`my ${this.id} task    `,completed:true}\n  this.store.dispatch(taskActions.addTask({task}))\n}\n\ninitForm(){\nthis.form=new FormGroup({  \n  taskValue : new FormControl('123'),\n  completed : new FormControl('456')\n})\n}\n}\n","<p>home works!</p>\n     <form [formGroup]=\"form\">\n<input type=\"text\" [formControl]=\"taskValue\" placeholder=\"Enter your task\">\n<input type=\"text\" [formControl]=\"completed\" placeholder=\"Enter if you completed\">\n </form>\n<button (click)=\"addTask()\">ADD</button>\n<div *ngFor=\"let task of tasks$ | async\">\n    <span [innerText]=\"task.id\">ID</span>\n    <span [innerText]=\"task.text\">text</span>\n    <span [innerText]=\"task.completed\">completed</span>\n\n\n</div>\n"]},"metadata":{},"sourceType":"module"}