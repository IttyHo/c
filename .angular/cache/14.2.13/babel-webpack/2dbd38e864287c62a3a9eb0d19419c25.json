{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeModule } from './pages/home/home.module';\nimport { ServicesModule, StoreLibModule } from 'store';\nimport { TodoStoreModule } from '@store/store/todo/todo-store.module';\nimport { CheckoutModule } from './pages/checkout/checkout.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ConfigurationService } from 'store';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, CheckoutModule, ServicesModule, HttpClientModule, HomeModule, StoreModule.forRoot({}), EffectsModule.forRoot([]), StoreLibModule, TodoStoreModule],\n  providers: [{\n    provide: APP_INITIALIZER,\n    useFactory: initConfigValues,\n    deps: [ConfigurationService],\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };\nexport function initConfigValues(config) {\n  return _ => config.initConfiguration(environment.configPath);\n}","map":{"version":3,"mappings":";AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,eAA1C;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,OAA/C;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,oBAAT,QAAqC,OAArC;AAwBA,IAAaC,SAAS,GAAtB,MAAaA,SAAb,CAAsB,EAAtB;AAAaA,SAAS,eAtBrBb,QAAQ,CAAC;EACRc,YAAY,EAAE,CACZV,YADY,CADN;EAKRW,OAAO,EAAE,CACPjB,aADO,EAEPK,gBAFO,EAGPM,cAHO,EAIPH,cAJO,EAKPI,gBALO,EAMPL,UANO,EAOPH,WAAW,CAACc,OAAZ,CAAoB,EAApB,CAPO,EAQPf,aAAa,CAACe,OAAd,CAAuB,EAAvB,CARO,EASPT,cATO,EAUPC,eAVO,CALD;EAiBRS,SAAS,EAAE,CACT;IAAEC,OAAO,EAAEnB,eAAX;IAA4BoB,UAAU,EAAEC,gBAAxC;IAA0DC,IAAI,EAAE,CAACT,oBAAD,CAAhE;IAAwFU,KAAK,EAAE;EAA/F,CADS,CAjBH;EAoBRC,SAAS,EAAE,CAACnB,YAAD;AApBH,CAAD,CAsBa,GAATS,SAAS,CAAT;SAAAA;AAGb,OAAM,SAAUO,gBAAV,CAA2BI,MAA3B,EAAuD;EAC3D,OAAQC,CAAC,IAAID,MAAM,CAACE,iBAAP,CAAyBf,WAAW,CAACgB,UAArC,CAAb;AACD","names":["BrowserModule","APP_INITIALIZER","NgModule","EffectsModule","StoreModule","AppRoutingModule","AppComponent","HomeModule","ServicesModule","StoreLibModule","TodoStoreModule","CheckoutModule","HttpClientModule","environment","ConfigurationService","AppModule","declarations","imports","forRoot","providers","provide","useFactory","initConfigValues","deps","multi","bootstrap","config","_","initConfiguration","configPath"],"sourceRoot":"","sources":["C:\\IttyHorowitz\\mini project\\to-do-list\\src\\app\\app.module.ts"],"sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeModule } from './pages/home/home.module';\nimport { ServicesModule, StoreLibModule } from 'store';\nimport { TodoStoreModule } from '@store/store/todo/todo-store.module';\nimport { CheckoutModule } from './pages/checkout/checkout.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ConfigurationService } from 'store';\n\n@NgModule({\n  declarations: [\n    AppComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CheckoutModule,\n    ServicesModule,\n    HttpClientModule,\n    HomeModule,\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot( []),\n    StoreLibModule,\n    TodoStoreModule\n  ],\n  providers: [\n    { provide: APP_INITIALIZER, useFactory: initConfigValues, deps: [ConfigurationService], multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\nexport function initConfigValues(config: ConfigurationService) {\n  return (_ => config.initConfiguration(environment.configPath));\n}"]},"metadata":{},"sourceType":"module"}