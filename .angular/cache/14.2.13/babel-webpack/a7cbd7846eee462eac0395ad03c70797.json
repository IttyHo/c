{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { TodoState } from './todo.state';\nimport { taskActions } from './todo.actions';\nexport const todoReducer = createReducer(new TodoState(), on(taskActions.loadTasks, state => Object.assign(Object.assign({}, state), {\n  loading: true\n})), on(taskActions.loadTasksSuccess, state => Object.assign(Object.assign({}, state), {\n  loading: false\n})), on(taskActions.loadTasksFailure, (state, {\n  error\n}) => Object.assign(Object.assign({}, state), {\n  loading: false,\n  error\n})), on(taskActions.addTask, (state, {\n  task\n}) => Object.assign(Object.assign({}, state), {\n  task\n})), on(taskActions.removeTask, (state, {\n  id\n}) => Object.assign(Object.assign({}, state), {\n  tasks: state.tasks.filter(task => task.id !== id)\n})));","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,EAAxB,QAAkC,aAAlC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CACvC,IAAIE,SAAJ,EADuC,EAEtCD,EAAE,CAACE,WAAW,CAACE,SAAb,EAAwBC,KAAK,IAAIC,gCAC9BD,KAD8B,GACzB;EACRE,OAAO,EAAE;AADD,CADyB,CAAjC,CAFoC,EAMtCP,EAAE,CAACE,WAAW,CAACM,gBAAb,EAAgCH,KAAD,IAAWC,gCACvCD,KADuC,GAClC;EACRE,OAAO,EAAE;AADD,CADkC,CAA1C,CANoC,EAUtCP,EAAE,CAACE,WAAW,CAACO,gBAAb,EAA+B,CAACJ,KAAD,EAAQ;EAAEK;AAAF,CAAR,KAAsBJ,gCAClDD,KADkD,GAC7C;EACRE,OAAO,EAAE,KADD;EAERG;AAFQ,CAD6C,CAArD,CAVoC,EAetCV,EAAE,CAACE,WAAW,CAACS,OAAb,EAAsB,CAACN,KAAD,EAAQ;EAAEO;AAAF,CAAR,KAAqBN,gCACxCD,KADwC,GACnC;EACRO;AADQ,CADmC,CAA3C,CAfoC,EAoBtCZ,EAAE,CAACE,WAAW,CAACW,UAAb,EAAyB,CAACR,KAAD,EAAQ;EAAES;AAAF,CAAR,KAAmBR,gCACzCD,KADyC,GACpC;EACRU,KAAK,EAAEV,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBJ,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAvC;AADC,CADoC,CAA5C,CApBoC,CAAjC","names":["createReducer","on","TodoState","taskActions","todoReducer","loadTasks","state","Object","loading","loadTasksSuccess","loadTasksFailure","error","addTask","task","removeTask","id","tasks","filter"],"sourceRoot":"","sources":["C:\\IttyHorowitz\\mini project\\to-do-list\\projects\\store\\src\\lib\\store\\todo\\todo.reducer.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\r\nimport { TodoState } from './todo.state';\r\nimport { taskActions} from './todo.actions';\r\n\r\nexport const todoReducer = createReducer(\r\n new TodoState(),\r\n  on(taskActions.loadTasks, state => ({\r\n    ...state,\r\n    loading: true\r\n  })),\r\n  on(taskActions.loadTasksSuccess, (state) => ({\r\n    ...state,\r\n    loading: false,\r\n  })),\r\n  on(taskActions.loadTasksFailure, (state, { error }) => ({\r\n    ...state,\r\n    loading: false,\r\n    error\r\n  })),\r\n  on(taskActions.addTask, (state, { task }) => ({\r\n    ...state,\r\n    task\r\n\r\n   })),\r\n  on(taskActions.removeTask, (state, { id }) => ({\r\n    ...state,\r\n    tasks: state.tasks.filter(task => task.id !== id)\r\n  }))\r\n); \r\n"]},"metadata":{},"sourceType":"module"}